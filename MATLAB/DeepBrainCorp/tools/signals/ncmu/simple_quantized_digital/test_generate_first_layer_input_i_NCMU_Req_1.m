%__________________________________________________________________________
%   function test_generate_first_layer_input_i_NCMU_Req_1()
%
%   verify qualitatively signal on FIRST STAGE generated to be input i
%   to a first stage.
%   NCMU_Req_1 defines as subsequent requirements a simple generic 
%   input signal following stereotypical distributions. Thinking of
%   how neuronal systems evolved over millions of years
%   the first step is to study a generic system with stereotypical yet
%   simple principles usual in nature. 
%
%   See system definition NCMU_System. On NCMU_Req_1 this signal is a first
%   layer input generated by a unique source with variability. Req_1 is the
%   simplest linear approximation to test a "system design".
%
%   See all NCMU_Req_1 functions labelled to fullfil this functionality
%   and associated documents designing the NUCLEAR COMPUTING/MEMORY UNIT
%__________________________________________________________________________
function test_generate_first_layer_input_i_NCMU_Req_1()

Ntriggers = 500;
rate = 20;         %Hz
SampRate = 20; %KHz
%generate each signal according to stereotypical mixtures common in nature
[mixGauss_signals, tVect] = ...
                       generate_each_signal_mixgauss_NCMU_Req_1(Ntriggers);
    
%generate max amplitude for each mixgauss according to distribution                     
MaxAmplitude_Signals = return_skewed_narrow_MaxValue(Ntriggers);

%scaled each mixgauss signals 
% Amplitude (without normalizing and scaling or normalizing and scaling?, 
%  and shapes for each signal (5 templates) to be defined with Paul
%  according to his experimental and theoretical knowhow.
%!!!!
mixGauss_signals = ...
          scale_signals_to_MaxAmp(mixGauss_signals, MaxAmplitude_Signals);
          %[nTriggers x nSamples]
%generate signals timestamps
trigger_list = ...
                  generate_stim_trigger_list_NCMU_Req_1_a(Ntriggers,rate);

                
%generate temporal signal
%!!!!   
mixGauss_Signal = ...
    generate_signal_from_templ_and_tstamps(mixGauss_signals,trigger_list,SampRate);

plot(mixGauss_Signal);

end